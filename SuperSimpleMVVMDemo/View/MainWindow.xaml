<!-- The xmlns:ViewModel defines the ViewModel namespace so it can be used as a variable (called ViewModel) later in this XAML file. -->
<Window x:Class="SuperSimpleMVVMDemo.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SuperSimpleMVVMDemo"
        xmlns:ViewModel="clr-namespace:SuperSimpleMVVMDemo.ViewModel"
        mc:Ignorable="d"
        Title="02350 Demo" Height="600" Width="800" Icon="/Icon.ico">
    <!-- This is where you set the Data Context of the View (Window), which tells the WPF engine where to look for the properties used by the bindings. -->
    <!-- The namespace of the MainViewModel class has to be specified above, this is important to remember, to avoid a lot of problems in getting bindings to work. -->
    <Window.DataContext>
        <ViewModel:MainViewModel />
    </Window.DataContext>
    <!-- This View (Window) contains only 1 Grid, with only 1 column and 1 row, but the Grid is necessary to put the 2 ItemsControls in the same area on top of each other -->
    <Grid>
        <!-- An ItemControl shows the objects of the property it is bound to. -->
        <!-- The ItemControl does not know how to display these objects and will by default show them with a TextBlock containing the return value of the objects "ToString()" method.  -->
        <!--  To override the visual presentation of the elements, Data Templates are used, which can be seen in the "app.xaml" file. -->
        <!-- These ItemsControls are bound to the public Lines and Shapes properties of the MainViewModel class. -->
        <!-- The order of the ItemsControls are important as the Lines will be shown first with the Shapes on top, try switching them. -->
        <ItemsControl ItemsSource="{Binding Lines}"/>
        <ItemsControl ItemsSource="{Binding Shapes}"/>
    </Grid>
</Window>
